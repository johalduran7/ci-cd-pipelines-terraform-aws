---

- name: print anything to import to main.yml in role apacheserver
  debug:
    msg: "Printing message from task imported in main.yaml of apacheserver role" 

- name: register salsa.html
  command: "cat /home/john/learn_ansible/p1_ansible/salsa.html"
  register: salsa_output

- name: copy content to html index
  copy:
    content: " {{ salsa_output.stdout }} "
    dest: /var/www/html/index.html

- name: Gather service facts # this has to be executed to include it in the ansible_facts
  service_facts:

- name: Register State and Status for Nginx.
  set_fact: # this is how you register several variables
    Nginx_state: "{{ ansible_facts.services.nginx.state }}"
    Nginx_status: "{{ ansible_facts.services['nginx.service'].status }} "
  # The services json looks as follows. As you can see, we have to use ['nginx.service'] because the key includes a dot.
  # otherwise, we can use services.nginx.state ...
  # {{ ansible_facts.services.['nginx.state'] }} also works
  # {
  #   "nginx": {
  #     "name": "nginx",
  #     "state": "stopped",
  #     "source": "sysv"
  #   },
  #   "nginx.service": {
  #     "name": "nginx.service",
  #     "state": "stopped",
  #     "status": "enabled",
  #     "source": "systemd"
  #   }
  # }

- name: Print status and state of Nginx
  debug:
    msg:
      - "State of Nginx: {{ Nginx_state }}"
      - "Status of Nginx: {{ Nginx_status }}"



- name: Ensure Apache is running and restart it
  service:
    name: apache2
    state: started
    enabled: yes
  when: Nginx_state == "stopped" or Nginx_status == "disabled" 
  notify:  # I define here the handler
    - Restart_apache2
  become: yes  # this enables privileges
