#docker run -p 27017:27017 -d --net mongo-network --name mongodb_p1 \
#-e MONGO_INITDB_ROOT_USERNAME=admin \ 
#-e MONGO_INITDB_ROOT_PASSWORD=1234 mongo
## you can use chatgpt for this

version: '3.8'

services:
  mongodb:
    image: mongo
    container_name: mongodb_p1
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
    networks:
      - mongo-network
    ports:
      - 27017:27017
    volumes:
      - mongo-data-2:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb_p1
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
    ports:
      - 8081:8081
    networks:
      - mongo-network

  app:
    image: p1-docker-app-local-2:1.2 # my local image created based on the app
    container_name: p1-docker-app-local
    restart: always
    ports:
      - 3000:3000
    networks:
      - mongo-network


  #app-ecr:  # this image has to exist on AWS
  #  image: 948586925757.dkr.ecr.us-east-1.amazonaws.com/p1-docker-app:1.0 # it's the URI on ECR for the tag
  #  container_name: p1-docker-app-ecr
  #  restart: always
  #  ports:
  #    - 3000:3000
  #  networks:
  #    - mongo-network

networks:
  mongo-network:
    name: mongo-network
    driver: bridge

volumes:
  mongo-data-2:
    driver: local